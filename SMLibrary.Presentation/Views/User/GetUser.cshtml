@model SMLibrary.Core.Models.UserCustomUser

@{
    ViewData["Title"] = "User Account";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
@{
    bool IsAuth = base.User.Identity.IsAuthenticated;
}

<h1 style="text-align: center;">@ViewData["Title"]</h1>


<div class="container">
    <div class="row justify-content-center">
        <div clas s="col-md-6">
            <div class="card text-center" style="color: white; background-color: @Model.BannerColor; ">
                <div class="card-body">
                    <div class="circular-image">
                        <img src="@Model.ImageUrl" alt="Photo">
                    </div>
                    <h2 class="card-text">Name: @Model.UserName</h2>
                    <p class="card-text">Description: @Model.Description</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row ">
        <div class="col-md-6 d-flex justify-content-between">
            <h2 id="booksHeader" onclick="toggle_Books()" style="cursor: pointer;border-bottom: 7px solid orange;">
                @Model.UserName.ToUpper()'s Books
            </h2>
            <h2 id="commentsHeader" onclick="toggle_Cooments()" style="cursor: pointer;">Comments</h2>
        </div>
    </div>
</div>

<div id="booksSection" class="row row-cols-1 row-cols-md-4 g-4" style="display: block;">
    @foreach (var item in @ViewBag.Books)
    {
        <div class="col">
            @if (item.Author != base.User.Identity.Name)
            {
                string truncatedDescription = string.Empty;

                if (!string.IsNullOrWhiteSpace(item.Description))
                {
                    string[] words = item.Description.Split(' ');
                    if (words.Length <= 20)
                    {
                        truncatedDescription = string.Join(" ", words);
                    }
                    else
                    {
                        truncatedDescription = string.Join(" ", words.Take(20)) + " ...";
                    }
                }

                <div class="card">
                    <form id="deleteForm-@item.Id" asp-controller="Books" asp-action="Delete">
                        @if (IsAuth)
                        {
                            @if (((IEnumerable<Book>)ViewBag.MyBooks).Any(b => b.Name == item.Name))
                            {
                                <button asp-action="DeleteBookbyUser" asp-controller="User" asp-route-id="@item.Id"
                                    style="background-color: white;border:0px white solid; font-size: 24px;" type="button"
                                    onclick="submitDeleteFormBook('@item.Id')">
                                    <span id="addstar-@item.Id" class="fa fa-star checked"></span>
                                </button>
                            }
                            else
                            {
                                <button asp-action="AddBooktoUser" asp-controller="User" asp-route-id="@item.Id"
                                    style="background-color: white;border:0px white solid; font-size: 24px;" type="button"
                                    onclick="submitAddBookForm('@item.Id')">
                                    <span id="addstar-@item.Id" class="fa fa-star not-checked"></span>
                                </button>
                            }
                        }
                        <img src="@Url.Content(item.Image)" class="card-img-top" alt="BookCover">
                        <div class="card-body">
                            <h5 class="card-title">@item.Name</h5>
                            <p class="card-text">Author: @item.Author</p>
                            <p class="card-text" style="color: gray;">@truncatedDescription</p>
                            <p class="card-text" style="color: blue;">Tag: #@item.tag</p>
                            @if (item.IsFinished == false)
                            {
                                <p class="card-text" style="color:rgb(255, 193, 47)">Ongoing</p>
                            }
                            else
                            {
                                <p class="card-text" style="color: green;">Finished</p>
                            }
                            @if (IsAuth)
                            {
                                <a href="@Url.Action("GetById", "Books", new { id = item.Id })" class="btn btn-secondary">Show
                                    More</a>
                            }
                        </div>
                    </form>
                </div>
            }
        </div>
    }
</div>
<div>

    <div id="commentsSection" style="display: none;">

        @if (ViewBag.Comments is null)
        {
            <h2>No Comments</h2>
        }

        else
        {
            foreach (var Comment in ViewBag.Comments)
            {
                <div style="border: 1px solid orange; text-align:center">
                    <p>User: @Comment.Sender</p>
                    <p>Book Name: @Comment.Book.Name</p>
                    <p>@Comment.Text</p>
                </div>
            }
        }

    </div>
</div>

<style>
    .btn-primary {
        background-color: #219ebc;
        border-color: #219ebc;
        color: #fff;
    }

    .circular-image {
        width: 250px;
        height: 250px;
        border-radius: 50%;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        align-content: center;
        transform: translate(200%, 0%);
    }
</style>

<script>

    function submitDeleteFormBook(itemId) {
        fetch(`/User/deleteBook/${itemId}`, {
            method: 'DELETE'
        })
            .then(response => {
                if (response.ok) {
                    console.log('Book deleted successfully');
                    const starIcon = document.getElementById(`addstar-${itemId}`);
                    if (starIcon.classList.contains('checked')) {
                        starIcon.classList.remove('checked');
                        starIcon.classList.add('not-checked');
                    }
                    else if (starIcon.classList.contains('not-checked')) {
                        starIcon.classList.remove('not-checked');
                        starIcon.classList.add('checked');
                    }
                } else {
                    console.error('Failed to delete book');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function submitAddBookForm(itemId) {
        fetch(`/User/add/${itemId}`, {
            method: 'POST'
        })
            .then(response => {
                if (response.ok) {
                    console.log('Book added successfully');
                    const starIcon = document.getElementById(`addstar-${itemId}`);
                    if (starIcon.classList.contains('not-checked')) {
                        starIcon.classList.remove('not-checked');
                        starIcon.classList.add('checked');
                    }
                    else {
                        starIcon.classList.remove('checked');
                        starIcon.classList.add('not-checked');
                    }
                } else {
                    console.error('Failed to add book');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    function toggle_Books() {
        var x = document.getElementById("booksSection");
        var hc = document.getElementById("commentsHeader");
        var h = document.getElementById("booksHeader");
        var y = document.getElementById("commentsSection");
        if (x.style.display === "none") {
            x.style.display = "block";
            h.style.borderBottom = "7px solid orange";
            hc.style.borderBottom = "0px solid white";
            y.style.display = "none";
        } else {
            x.style.display = "none";
        }
    }
    function toggle_Cooments() {
        var x = document.getElementById("commentsSection");
        var h = document.getElementById("commentsHeader");
        var hb = document.getElementById("booksHeader");
        var y = document.getElementById("booksSection");
        if (x.style.display === "none") {
            x.style.display = "block";
            h.style.borderBottom = "7px solid orange";
            hb.style.borderBottom = "0px solid white";
            y.style.display = "none";
        } else {
            x.style.display = "none";
        }
    }
</script>

<style>
    .checked {
        color: orange;
    }

    .not-checked {
        color: gray;
    }
</style>